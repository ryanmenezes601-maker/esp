-- ESP com limite de distância + menu local organizado
-- Removido todo o código de Aimbot

-- Serviços
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Opções compartilhadas
local options = {
    box = true,
    skeleton = true,
    rgb = true,
    name = true,
    distance = true,
    fixedColor = Color3.fromRGB(255, 0, 0),
    font = "UI",
    offsetX = 0,
    offsetY = 0,

    -- Novo: distância máxima para exibir ESP
    maxDistance = 1000,  -- em studs (metros aproximados)

    -- FOV circle (visual)
    fovVisible = true,
    fov = 150,
    fovColor = Color3.fromRGB(35,160,255),

    -- Sliders RGB para fixed color
    colorR = 255,
    colorG = 0,
    colorB = 0,
}

local availableFonts = {
    UI = 0, System = 1, Plex = 2, Monospace = 3, Cartoon = 4
}

-- Função arco-íris
local function getRGBColor()
    local t = tick() * 2
    return Color3.fromHSV(t % 1, 1, 1)
end

-- Sincroniza fixedColor com sliders
options.fixedColor = Color3.fromRGB(options.colorR, options.colorG, options.colorB)

-- Verifica se Drawing API existe
local DrawingAvailable = false
pcall(function()
    DrawingAvailable = (typeof(Drawing) == "table" or typeof(Drawing) == "userdata")
end)
if not DrawingAvailable then
    warn("Drawing API não disponível — ESP visual não funcionará.")
end

-- Criadores seguros de objetos Drawing
local function makeBox()
    if not DrawingAvailable then return nil end
    local ok, obj = pcall(function() return Drawing.new("Square") end)
    if not ok or not obj then return nil end
    obj.Thickness = 1
    obj.Filled = false
    obj.Visible = false
    obj.Transparency = 1
    return obj
end

local function makeLine()
    if not DrawingAvailable then return nil end
    local ok, obj = pcall(function() return Drawing.new("Line") end)
    if not ok or not obj then return nil end
    obj.Thickness = 1
    obj.Visible = false
    obj.Transparency = 1
    return obj
end

local function makeText()
    if not DrawingAvailable then return nil end
    local ok, obj = pcall(function() return Drawing.new("Text") end)
    if not ok or not obj then return nil end
    obj.Size = 14
    obj.Color = Color3.fromRGB(255,255,255)
    obj.Center = true
    obj.Outline = true
    obj.Visible = false
    obj.Font = availableFonts[options.font] or 0
    return obj
end

-- Tabela de ESP por jogador + cleanup
local ESP_TABLE = {}

local function safeRemove(drawObj)
    if not drawObj then return end
    pcall(function()
        if drawObj.Remove then
            drawObj:Remove()
        else
            drawObj.Visible = false
        end
    end)
end

local function cleanupESP(player)
    local d = ESP_TABLE[player]
    if d then
        safeRemove(d.box)
        safeRemove(d.name)
        safeRemove(d.dist)
        if d.lines then
            for _,ln in ipairs(d.lines) do safeRemove(ln) end
        end
        ESP_TABLE[player] = nil
    end
end

Players.PlayerRemoving:Connect(function(plr) cleanupESP(plr) end)

-- Círculo de FOV visual
local FOVCircle = nil
if DrawingAvailable then
    local ok, obj = pcall(function() return Drawing.new("Circle") end)
    if ok and obj then
        FOVCircle = obj
        FOVCircle.Visible = false
        FOVCircle.Radius = options.fov
        FOVCircle.Thickness = 1
        FOVCircle.NumSides = 64
        FOVCircle.Filled = false
        FOVCircle.Transparency = 1
        FOVCircle.Color = options.fovColor
    end
end

-- Loop de renderização (ESP + FOV)
if DrawingAvailable then
    RunService.RenderStepped:Connect(function()
        -- Atualiza círculo FOV
        if FOVCircle then
            if options.fovVisible then
                local vx, vy = Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2
                FOVCircle.Position = Vector2.new(vx, vy)
                FOVCircle.Radius = options.fov
                FOVCircle.Color = options.fovColor
                FOVCircle.Visible = true
            else
                FOVCircle.Visible = false
            end
        end

        -- Para cada jogador
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                if localRoot then
                    local dist = (player.Character.HumanoidRootPart.Position - localRoot.Position).Magnitude
                    if dist > options.maxDistance then
                        if ESP_TABLE[player] then cleanupESP(player) end
                        continue
                    end
                end

                if not ESP_TABLE[player] then
                    ESP_TABLE[player] = {
                        box = makeBox(),
                        name = makeText(),
                        dist = makeText(),
                        lines = {},
                    }
                    for i = 1, 20 do
                        table.insert(ESP_TABLE[player].lines, makeLine())
                    end
                end

                local data = ESP_TABLE[player]
                local hrp = player.Character.HumanoidRootPart
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if not hrp or not humanoid then
                    cleanupESP(player)
                    continue
                end

                local pos3, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                local color = options.rgb and getRGBColor() or options.fixedColor

                -- Box
                if data.box and options.box and onScreen and pos3.Z > 0.1 then
                    local height = math.clamp((humanoid.HipHeight or 2) * (200 / pos3.Z), 10, 1000)
                    local width = math.clamp(height / 2, 6, 600)
                    data.box.Position = Vector2.new(pos3.X - width/2 + options.offsetX, pos3.Y - height/2 + options.offsetY)
                    data.box.Size = Vector2.new(width, height)
                    data.box.Color = color
                    data.box.Visible = true
                else
                    if data.box then data.box.Visible = false end
                end

                -- Skeleton (linhas)
                for _,ln in ipairs(data.lines) do
                    ln.Visible = false
                end
                if options.skeleton then
                    local function drawBone(a, b, idx)
                        local p1 = player.Character:FindFirstChild(a)
                        local p2 = player.Character:FindFirstChild(b)
                        if p1 and p2 then
                            local p1v, on1 = Camera:WorldToViewportPoint(p1.Position)
                            local p2v, on2 = Camera:WorldToViewportPoint(p2.Position)
                            if on1 and on2 and p1v.Z > 0 and p2v.Z > 0 then
                                local ln = data.lines[idx]
                                if ln then
                                    ln.From = Vector2.new(p1v.X + options.offsetX, p1v.Y + options.offsetY)
                                    ln.To = Vector2.new(p2v.X + options.offsetX, p2v.Y + options.offsetY)
                                    ln.Color = color
                                    ln.Visible = true
                                end
                            end
                        end
                    end
                    -- algumas conexões de ossos (R15 / R6)
                    drawBone("Head", "UpperTorso", 1)
                    drawBone("UpperTorso", "LowerTorso", 2)
                    drawBone("LowerTorso", "LeftUpperLeg", 3)
                    drawBone("LeftUpperLeg", "LeftLowerLeg", 4)
                    drawBone("LeftLowerLeg", "LeftFoot", 5)
                    drawBone("LowerTorso", "RightUpperLeg", 6)
                    drawBone("RightUpperLeg", "RightLowerLeg", 7)
                    drawBone("RightLowerLeg", "RightFoot", 8)
                    drawBone("UpperTorso", "LeftUpperArm", 9)
                    drawBone("LeftUpperArm", "LeftLowerArm", 10)
                    drawBone("LeftLowerArm", "LeftHand", 11)
                    drawBone("UpperTorso", "RightUpperArm", 12)
                    drawBone("RightUpperArm", "RightLowerArm", 13)
                    drawBone("RightLowerArm", "RightHand", 14)
                end

                -- Nome
                if data.name then data.name.Font = availableFonts[options.font] or 0 end
                if options.name and onScreen then
                    data.name.Text = player.Name
                    local yOff = ((data.box and data.box.Size and data.box.Size.Y) or 40) / 2 + 12
                    data.name.Position = Vector2.new(pos3.X + options.offsetX, pos3.Y - yOff + options.offsetY)
                    data.name.Color = color
                    data.name.Visible = true
                else
                    if data.name then data.name.Visible = false end
                end

                -- Distância textual
                if data.dist and options.distance and onScreen then
                    local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                    local distVal = 0
                    if localRoot then
                        distVal = (localRoot.Position - hrp.Position).Magnitude
                    end
                    data.dist.Text = string.format("%.1f m", distVal)
                    local yOff = ((data.box and data.box.Size and data.box.Size.Y) or 40) / 2 + 12
                    data.dist.Position = Vector2.new(pos3.X + options.offsetX, pos3.Y + yOff + options.offsetY)
                    data.dist.Color = Color3.fromRGB(220,220,220)
                    data.dist.Visible = true
                else
                    if data.dist then data.dist.Visible = false end
                end

            else
                if ESP_TABLE[player] then
                    cleanupESP(player)
                end
            end
        end
    end)
end

-- UI local organizado (menu único)
do
    -- Evita duplicar a GUI se já existir
    if game.CoreGui:FindFirstChild("ESP_Menu_Local") then
        -- Já existe; não criar outra.
        return
    end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ESP_Menu_Local"
    screenGui.Parent = game.CoreGui

    local frame = Instance.new("Frame", screenGui)
    frame.Position = UDim2.new(0, 20, 0, 80)
    frame.Size = UDim2.new(0, 360, 0, 440)
    frame.BackgroundColor3 = Color3.fromRGB(12, 18, 30)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1, 0, 0, 36)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundColor3 = Color3.fromRGB(22, 30, 44)
    title.TextColor3 = Color3.fromRGB(230, 240, 255)
    title.Text = "Configurações ESP"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16

    local container = Instance.new("ScrollingFrame", frame)
    container.Position = UDim2.new(0, 8, 0, 44)
    container.Size = UDim2.new(1, -16, 1, -52)
    container.BackgroundTransparency = 1
    container.ScrollBarThickness = 6

    -- Funções auxiliares para criar controles
    local function addLabel(y, text)
        local lbl = Instance.new("TextLabel", container)
        lbl.Position = UDim2.new(0, 0, 0, y)
        lbl.Size = UDim2.new(1, 0, 0, 22)
        lbl.BackgroundTransparency = 1
        lbl.TextColor3 = Color3.fromRGB(200, 210, 220)
        lbl.Text = text
        lbl.Font = Enum.Font.Gotham
        lbl.TextSize = 14
        return lbl
    end

    local function addToggle(y, text, key)
        local btn = Instance.new("TextButton", container)
        btn.Position = UDim2.new(0, 0, 0, y)
        btn.Size = UDim2.new(1, 0, 0, 28)
        btn.BackgroundColor3 = Color3.fromRGB(28, 36, 52)
        btn.TextColor3 = Color3.fromRGB(230, 240, 255)
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.Text = text .. ": " .. (options[key] and "ON" or "OFF")
        btn.MouseButton1Click:Connect(function()
            options[key] = not options[key]
            btn.Text = text .. ": " .. (options[key] and "ON" or "OFF")
        end)
        return btn
    end

    local function addSlider(y, text, key, min, max, step)
        local btn = Instance.new("TextButton", container)
        btn.Position = UDim2.new(0, 0, 0, y)
        btn.Size = UDim2.new(1, 0, 0, 28)
        btn.BackgroundColor3 = Color3.fromRGB(28, 36, 52)
        btn.TextColor3 = Color3.fromRGB(230, 240, 255)
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.Text = text .. ": " .. tostring(options[key])
        btn.MouseButton1Click:Connect(function()
            local inc = step or 1
            local newVal = options[key] + inc
            if newVal > max then
                newVal = min
            end
            -- para inteiros
            newVal = math.floor(newVal)
            options[key] = newVal
            if key == "colorR" or key == "colorG" or key == "colorB" then
                options.fixedColor = Color3.fromRGB(options.colorR, options.colorG, options.colorB)
            end
            btn.Text = text .. ": " .. tostring(options[key])
        end)
        return btn
    end

    -- Construindo o menu
    local y = 0
    addLabel(y, "=== Visual ESP ===") y = y + 24
    addToggle(y, "Mostrar Caixa", "box"); y = y + 32
    addToggle(y, "Mostrar Esqueleto", "skeleton"); y = y + 32
    addToggle(y, "Cor Arco-íris (RGB)", "rgb"); y = y + 32
    addToggle(y, "Mostrar Nome", "name"); y = y + 32
    addToggle(y, "Mostrar Distância", "distance"); y = y + 32

    addLabel(y, "-- Cor Fixa --") y = y + 24
    addSlider(y, "Cor R", "colorR", 0, 255, 16); y = y + 32
    addSlider(y, "Cor G", "colorG", 0, 255, 16); y = y + 32
    addSlider(y, "Cor B", "colorB", 0, 255, 16); y = y + 32

    addLabel(y, "=== Círculo de FOV ===") y = y + 24
    addToggle(y, "Mostrar Círculo", "fovVisible"); y = y + 32
    addSlider(y, "Raio do FOV", "fov", 10, 1000, 10); y = y + 32

    addLabel(y, "=== Limite de Distância ===") y = y + 24
    addSlider(y, "Distância Máxima ESP", "maxDistance", 50, 10000, 50); y = y + 32

    addLabel(y, "=== Offset de Posição ===") y = y + 24
    addSlider(y, "Offset X", "offsetX", -300, 300, 10); y = y + 32
    addSlider(y, "Offset Y", "offsetY", -300, 300, 10); y = y + 32

    container.CanvasSize = UDim2.new(0, 0, 0, y + 50)
end

print("Script carregado: ESP com limite de distância e menu organizado.")
