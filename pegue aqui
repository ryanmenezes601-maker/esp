--[[  
    Script unificado: Aimbot + ESP com limite de distância + menu organizado  
]]  

--// Serviços
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variáveis globais
local DrawingAvailable = false
pcall(function() DrawingAvailable = (typeof(Drawing) == "table" or typeof(Drawing) == "userdata") end)
if not DrawingAvailable then warn("Drawing API não disponível — ESP visual não funcionará.") end

--// UTILIDADES
local function safeRemove(drawObj)
    if not drawObj then return end
    pcall(function()
        if drawObj.Remove then drawObj:Remove() else drawObj.Visible = false end
    end)
end

local availableFonts = { UI = 0, System = 1, Plex = 2, Monospace = 3, Cartoon = 4 }

--// Configurações compartilhadas (ESP + Aimbot)
local options = {
    -- ESP
    box = true,
    skeleton = true,
    rgb = true,
    name = true,
    distance = true,
    fixedColor = Color3.fromRGB(255, 0, 0),
    font = "UI",
    offsetX = 0,
    offsetY = 0,
    maxDistance = 1000,

    -- FOV circle visual
    fovVisible = true,
    fov = 150,
    fovColor = Color3.fromRGB(35,160,255),

    -- Aimbot
    aimbotEnabled = false,
    aimbotTeamCheck = false,
    aimbotAliveCheck = true,
    aimbotWallCheck = false,
    aimbotSensitivity = 0,
    aimbotThirdPerson = false,
    aimbotThirdPersonSensitivity = 3,
    aimbotTriggerKey = "MouseButton2",
    aimbotToggle = false,
    aimbotLockPart = "Head",
}

-- Atualiza fixedColor se sliders mudarem (usado no menu)
options.fixedColor = Color3.fromRGB(255, 0, 0)

--// Função arco-íris para ESP
local function getRGBColor()
    local t = tick() * 2
    return Color3.fromHSV(t % 1, 1, 1)
end

--// Criadores seguros de Drawing Objects
local function makeBox()
    if not DrawingAvailable then return nil end
    local ok, obj = pcall(function() return Drawing.new("Square") end)
    if not ok or not obj then return nil end
    obj.Thickness = 1
    obj.Filled = false
    obj.Visible = false
    obj.Transparency = 1
    return obj
end

local function makeLine()
    if not DrawingAvailable then return nil end
    local ok, obj = pcall(function() return Drawing.new("Line") end)
    if not ok or not obj then return nil end
    obj.Thickness = 1
    obj.Visible = false
    obj.Transparency = 1
    return obj
end

local function makeText()
    if not DrawingAvailable then return nil end
    local ok, obj = pcall(function() return Drawing.new("Text") end)
    if not ok or not obj then return nil end
    obj.Size = 14
    obj.Color = Color3.fromRGB(255,255,255)
    obj.Center = true
    obj.Outline = true
    obj.Visible = false
    obj.Font = availableFonts[options.font] or 0
    return obj
end

--// Tabela de ESP por jogador
local ESP_TABLE = {}

local function cleanupESP(player)
    local d = ESP_TABLE[player]
    if d then
        safeRemove(d.box)
        safeRemove(d.name)
        safeRemove(d.dist)
        if d.lines then
            for _, ln in ipairs(d.lines) do safeRemove(ln) end
        end
        ESP_TABLE[player] = nil
    end
end

Players.PlayerRemoving:Connect(cleanupESP)

--// Círculo de FOV visual
local FOVCircle = nil
if DrawingAvailable then
    local ok, obj = pcall(function() return Drawing.new("Circle") end)
    if ok and obj then
        FOVCircle = obj
        FOVCircle.Visible = false
        FOVCircle.Radius = options.fov
        FOVCircle.Thickness = 1
        FOVCircle.NumSides = 64
        FOVCircle.Filled = false
        FOVCircle.Transparency = 1
        FOVCircle.Color = options.fovColor
    end
end

--// Funções auxiliares do Aimbot

local Environment = {
    Locked = nil,
    Running = false,
    OriginalSensitivity = UserInputService.MouseDeltaSensitivity,
    Animation = nil,
}

local function CancelLock()
    Environment.Locked = nil
    if FOVCircle then
        FOVCircle.Color = options.fovColor
    end
    UserInputService.MouseDeltaSensitivity = Environment.OriginalSensitivity
    if Environment.Animation then
        Environment.Animation:Cancel()
        Environment.Animation = nil
    end
end

local function GetClosestPlayer()
    local RequiredDistance = (options.fovVisible and options.fov or 2000)
    Environment.Locked = nil

    for _, v in next, Players:GetPlayers() do
        if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild(options.aimbotLockPart) and v.Character:FindFirstChildOfClass("Humanoid") then
            local humanoid = v.Character:FindFirstChildOfClass("Humanoid")
            if options.aimbotTeamCheck and v.TeamColor == LocalPlayer.TeamColor then continue end
            if options.aimbotAliveCheck and humanoid.Health <= 0 then continue end
            if options.aimbotWallCheck and #(Camera:GetPartsObscuringTarget({v.Character[options.aimbotLockPart].Position}, v.Character:GetDescendants())) > 0 then continue end

            local Vector, OnScreen = Camera:WorldToViewportPoint(v.Character[options.aimbotLockPart].Position)
            local MousePos = UserInputService:GetMouseLocation()
            local Dist = (Vector2.new(Vector.X, Vector.Y) - MousePos).Magnitude

            if Dist < RequiredDistance and OnScreen then
                RequiredDistance = Dist
                Environment.Locked = v
            end
        end
    end
end

--// Atualiza loop aimbot + ESP

RunService.RenderStepped:Connect(function()
    -- Atualiza círculo FOV
    if FOVCircle then
        if options.fovVisible then
            local vx, vy = Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2
            FOVCircle.Position = Vector2.new(vx, vy)
            FOVCircle.Radius = options.fov
            FOVCircle.Color = options.fovColor
            FOVCircle.Visible = true
        else
            FOVCircle.Visible = false
        end
    end

    -- ESP
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if localRoot then
                local dist = (player.Character.HumanoidRootPart.Position - localRoot.Position).Magnitude
                if dist > options.maxDistance then
                    if ESP_TABLE[player] then cleanupESP(player) end
                    continue
                end
            end

            if not ESP_TABLE[player] then
                ESP_TABLE[player] = {
                    box = makeBox(),
                    name = makeText(),
                    dist = makeText(),
                    lines = {},
                }
                for i = 1, 20 do
                    table.insert(ESP_TABLE[player].lines, makeLine())
                end
            end

            local data = ESP_TABLE[player]
            local hrp = player.Character.HumanoidRootPart
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if not hrp or not humanoid then
                cleanupESP(player)
                continue
            end

            local pos3, onScreen = Camera:WorldToViewportPoint(hrp.Position)
            local color = options.rgb and getRGBColor() or options.fixedColor

            -- Box
            if data.box and options.box and onScreen and pos3.Z > 0.1 then
                local height = math.clamp((humanoid.HipHeight or 2) * (200 / pos3.Z), 10, 1000)
                local width = math.clamp(height / 2, 6, 600)
                data.box.Position = Vector2.new(pos3.X - width/2 + options.offsetX, pos3.Y - height/2 + options.offsetY)
                data.box.Size = Vector2.new(width, height)
                data.box.Color = color
                data.box.Visible = true
            else
                if data.box then data.box.Visible = false end
            end

            -- Skeleton (linhas)
            for _, ln in ipairs(data.lines) do ln.Visible = false end
            if options.skeleton then
                local function drawBone(a, b, idx)
                    local p1 = player.Character:FindFirstChild(a)
                    local p2 = player.Character:FindFirstChild(b)
                    if p1 and p2 then
                        local p1v, on1 = Camera:WorldToViewportPoint(p1.Position)
                        local p2v, on2 = Camera:WorldToViewportPoint(p2.Position)
                        if on1 and on2 and p1v.Z > 0.1 and p2v.Z > 0.1 then
                            local line = data.lines[idx]
                            line.From = Vector2.new(p1v.X + options.offsetX, p1v.Y + options.offsetY)
                            line.To = Vector2.new(p2v.X + options.offsetX, p2v.Y + options.offsetY)
                            line.Color = color
                            line.Visible = true
                        end
                    end
                end

                -- Ossos principais
                drawBone("Head", "Neck", 1)
                drawBone("Neck", "UpperTorso", 2)
                drawBone("UpperTorso", "LeftUpperArm", 3)
                drawBone("LeftUpperArm", "LeftLowerArm", 4)
                drawBone("LeftLowerArm", "LeftHand", 5)
                drawBone("UpperTorso", "RightUpperArm", 6)
                drawBone("RightUpperArm", "RightLowerArm", 7)
                drawBone("RightLowerArm", "RightHand", 8)
                drawBone("UpperTorso", "LowerTorso", 9)
                drawBone("LowerTorso", "LeftUpperLeg", 10)
                drawBone("LeftUpperLeg", "LeftLowerLeg", 11)
                drawBone("LeftLowerLeg", "LeftFoot", 12)
                drawBone("LowerTorso", "RightUpperLeg", 13)
                drawBone("RightUpperLeg", "RightLowerLeg", 14)
                drawBone("RightLowerLeg", "RightFoot", 15)
            end

            -- Nome
            if data.name and options.name and onScreen and pos3.Z > 0.1 then
                data.name.Position = Vector2.new(pos3.X + options.offsetX, pos3.Y - 20 + options.offsetY)
                data.name.Text = player.Name
                data.name.Color = color
                data.name.Visible = true
                data.name.Font = availableFonts[options.font] or 0
            else
                if data.name then data.name.Visible = false end
            end

            -- Distância
            if data.dist and options.distance and onScreen and pos3.Z > 0.1 then
                local distText = string.format("%.0f", (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
                data.dist.Position = Vector2.new(pos3.X + options.offsetX, pos3.Y + 10 + options.offsetY)
                data.dist.Text = distText .. "m"
                data.dist.Color = color
                data.dist.Visible = true
                data.dist.Font = availableFonts[options.font] or 0
            else
                if data.dist then data.dist.Visible = false end
            end
        else
            if ESP_TABLE[player] then cleanupESP(player) end
        end
    end

    -- Aimbot: busca o alvo mais próximo no FOV
    if options.aimbotEnabled and UserInputService:IsMouseButtonPressed(Enum.UserInputType[options.aimbotTriggerKey]) then
        GetClosestPlayer()
        local target = Environment.Locked
        if target and target.Character and target.Character:FindFirstChild(options.aimbotLockPart) then
            local aimPos = target.Character[options.aimbotLockPart].Position
            local mousePos = UserInputService:GetMouseLocation()

            local worldPos, onScreen = Camera:WorldToViewportPoint(aimPos)
            if onScreen then
                local delta = Vector2.new(worldPos.X, worldPos.Y) - mousePos
                if delta.Magnitude <= options.fov then
                    -- Sensibilidade ajustada
                    local sensitivity = options.aimbotSensitivity
                    if options.aimbotThirdPerson and not Camera.CameraType == Enum.CameraType.Scriptable then
                        sensitivity = options.aimbotThirdPersonSensitivity
                    end
                    -- Movimenta o mouse na direção do alvo (smooth)
                    local moveVector = delta.Unit * math.min(delta.Magnitude, sensitivity)
                    mousemoverel(moveVector.X, moveVector.Y)
                end
            end
        else
            CancelLock()
        end
    else
        CancelLock()
    end
end)

--// Menu simples (usando UserInputService para toggle e configuração básica)

local menuVisible = false

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    -- Toggle menu com a tecla "Insert"
    if input.KeyCode == Enum.KeyCode.Insert then
        menuVisible = not menuVisible
        print("Menu " .. (menuVisible and "ativado" or "desativado"))
    end

    -- Toggle Aimbot com F (exemplo)
    if input.KeyCode == Enum.KeyCode.F then
        options.aimbotEnabled = not options.aimbotEnabled
        print("Aimbot " .. (options.aimbotEnabled and "ativado" or "desativado"))
    end

    -- Toggle ESP Boxes com B (exemplo)
    if input.KeyCode == Enum.KeyCode.B then
        options.box = not options.box
        print("ESP Boxes " .. (options.box and "ativadas" or "desativadas"))
    end

    -- Toggle Skeleton com N (exemplo)
    if input.KeyCode == Enum.KeyCode.N then
        options.skeleton = not options.skeleton
        print("ESP Skeleton " .. (options.skeleton and "ativado" or "desativado"))
    end
end)

print("Script unificado carregado. Pressione INSERT para abrir menu (ainda básico).")
