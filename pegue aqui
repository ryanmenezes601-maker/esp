--// CONFIGURAÇÃO INICIAL
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

--// MENU
local menuVisible = false
local options = {
    box = true,
    skeleton = true,
    rgb = true,
}

--// GUI do MENU
local function createMenu()
    local screenGui = Instance.new("ScreenGui", game.CoreGui)
    screenGui.Name = "ESP_Menu"

    local frame = Instance.new("Frame", screenGui)
    frame.Position = UDim2.new(0, 20, 0, 100)
    frame.Size = UDim2.new(0, 180, 0, 130)
    frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    frame.BorderSizePixel = 0
    frame.Visible = menuVisible

    local function createToggle(name, y, default)
        local toggle = Instance.new("TextButton", frame)
        toggle.Position = UDim2.new(0, 10, 0, y)
        toggle.Size = UDim2.new(0, 160, 0, 30)
        toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        toggle.TextColor3 = Color3.new(1, 1, 1)
        toggle.Text = name .. ": " .. (default and "ON" or "OFF")
        toggle.TextSize = 14

        toggle.MouseButton1Click:Connect(function()
            options[name:lower()] = not options[name:lower()]
            toggle.Text = name .. ": " .. (options[name:lower()] and "ON" or "OFF")
        end)
    end

    createToggle("Box", 10, options.box)
    createToggle("Skeleton", 50, options.skeleton)
    createToggle("RGB", 90, options.rgb)

    return frame
end

local menu = createMenu()

-- Alternar menu com a tecla L
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.L then
        menuVisible = not menuVisible
        menu.Visible = menuVisible
    end
end)

--// FUNÇÕES AUXILIARES

-- Criar Drawing Box
local function createBox()
    local box = Drawing.new("Square")
    box.Thickness = 1
    box.Transparency = 1
    box.Filled = false
    return box
end

-- Criar Line para Skeleton
local function createLine()
    local line = Drawing.new("Line")
    line.Thickness = 1
    line.Transparency = 1
    return line
end

-- Função para gerar RGB dinâmico
local function getRGBColor()
    local t = tick() * 2
    return Color3.fromHSV(t % 1, 1, 1)
end

--// TABELA DE ESPS
local ESP = {}

--// ATUALIZAR ESPS
RunService.RenderStepped:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            if not ESP[player] then
                -- Criar estrutura de ESP
                ESP[player] = {
                    box = createBox(),
                    lines = {}, -- Skeleton lines
                }
                for i = 1, 15 do
                    table.insert(ESP[player].lines, createLine())
                end
            end

            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")

            if hrp and humanoid then
                local pos, onscreen = Camera:WorldToViewportPoint(hrp.Position)
                local color = options.rgb and getRGBColor() or Color3.fromRGB(255, 0, 0)

                -- BOX
                if options.box and onscreen then
                    local size = humanoid.HipHeight + humanoid.BodyHeightScale.Value * 6
                    local height = math.clamp(size * 10, 2, 300)
                    local width = height / 2
                    ESP[player].box.Position = Vector2.new(pos.X - width / 2, pos.Y - height / 2)
                    ESP[player].box.Size = Vector2.new(width, height)
                    ESP[player].box.Color = color
                    ESP[player].box.Visible = true
                else
                    ESP[player].box.Visible = false
                end

                -- SKELETON
                for _, line in ipairs(ESP[player].lines) do
                    line.Visible = false
                end

                if options.skeleton then
                    local function drawBone(from, to, index)
                        local part1 = player.Character:FindFirstChild(from)
                        local part2 = player.Character:FindFirstChild(to)
                        if part1 and part2 then
                            local p1, on1 = Camera:WorldToViewportPoint(part1.Position)
                            local p2, on2 = Camera:WorldToViewportPoint(part2.Position)
                            if on1 and on2 then
                                local line = ESP[player].lines[index]
                                line.From = Vector2.new(p1.X, p1.Y)
                                line.To = Vector2.new(p2.X, p2.Y)
                                line.Color = color
                                line.Visible = true
                            end
                        end
                    end

                    drawBone("Head", "UpperTorso", 1)
                    drawBone("UpperTorso", "LowerTorso", 2)
                    drawBone("LowerTorso", "LeftUpperLeg", 3)
                    drawBone("LeftUpperLeg", "LeftLowerLeg", 4)
                    drawBone("LeftLowerLeg", "LeftFoot", 5)
                    drawBone("LowerTorso", "RightUpperLeg", 6)
                    drawBone("RightUpperLeg", "RightLowerLeg", 7)
                    drawBone("RightLowerLeg", "RightFoot", 8)
                    drawBone("UpperTorso", "LeftUpperArm", 9)
                    drawBone("LeftUpperArm", "LeftLowerArm", 10)
                    drawBone("LeftLowerArm", "LeftHand", 11)
                    drawBone("UpperTorso", "RightUpperArm", 12)
                    drawBone("RightUpperArm", "RightLowerArm", 13)
                    drawBone("RightLowerArm", "RightHand", 14)
                end
            end
        end
    end

--// Cache
 
local loadstring, game, getgenv, setclipboard = loadstring, game, getgenv, setclipboard
 
--// Loaded check
 
if getgenv().Aimbot then return end
 
--// Load Aimbot V2 (Raw)
 
loadstring(game:HttpGet("https://raw.githubusercontent.com/Exunys/Aimbot-V2/main/Resources/Scripts/Raw%20Main.lua"))()
 
--// Variables
 
local Aimbot = getgenv().Aimbot
local Settings, FOVSettings, Functions = Aimbot.Settings, Aimbot.FOVSettings, Aimbot.Functions
 
local Library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)() -- Pepsi's UI Library
 
local Parts = {"Head", "HumanoidRootPart", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg", "LeftHand", "RightHand", "LeftLowerArm", "RightLowerArm", "LeftUpperArm", "RightUpperArm", "LeftFoot", "LeftLowerLeg", "UpperTorso", "LeftUpperLeg", "RightFoot", "RightLowerLeg", "LowerTorso", "RightUpperLeg"}
 
--// Frame
 
Library.UnloadCallback = Functions.Exit
 
local MainFrame = Library:CreateWindow({
    Name = "Aimbot V2",
    Themeable = {
        Image = "7059346386",
        Info = "Made by Exunys\nPowered by Pepsi's UI Library",
        Credit = false
    },
    Background = "",
    Theme = [[{"__Designer.Colors.section":"ADC7FF","__Designer.Colors.topGradient":"1B242F","__Designer.Settings.ShowHideKey":"Enum.KeyCode.RShift","__Designer.Colors.otherElementText":"54637D","__Designer.Colors.hoveredOptionBottom":"38667D","__Designer.Background.ImageAssetID":"","__Designer.Colors.unhoveredOptionTop":"407495","__Designer.Colors.innerBorder":"2C4168","__Designer.Colors.unselectedOption":"4E6EA0","__Designer.Background.UseBackgroundImage":true,"__Designer.Files.WorkspaceFile":"Aimbot V2","__Designer.Colors.main":"23A0FF","__Designer.Colors.outerBorder":"162943","__Designer.Background.ImageColor":"FFFFFF","__Designer.Colors.tabText":"C9DFF1","__Designer.Colors.elementBorder":"111D26","__Designer.Colors.sectionBackground":"0E141C","__Designer.Colors.selectedOption":"558AC2","__Designer.Colors.background":"11182A","__Designer.Colors.bottomGradient":"202B42","__Designer.Background.ImageTransparency":95,"__Designer.Colors.hoveredOptionTop":"4885A0","__Designer.Colors.elementText":"7692B8","__Designer.Colors.unhoveredOptionBottom":"5471C4"}]]
})
 
--// Tabs
 
local SettingsTab = MainFrame:CreateTab({
    Name = "Settings"
})
 
local FOVSettingsTab = MainFrame:CreateTab({
    Name = "FOV Settings"
})
 
local FunctionsTab = MainFrame:CreateTab({
    Name = "Functions"
})
 
--// Settings - Sections
 
local Values = SettingsTab:CreateSection({
    Name = "Values"
})
 
local Checks = SettingsTab:CreateSection({
    Name = "Checks"
})
 
local ThirdPerson = SettingsTab:CreateSection({
    Name = "Third Person Mode?"
})
 
--// FOV Settings - Sections
 
local FOV_Values = FOVSettingsTab:CreateSection({
    Name = "Values"
})
 
local FOV_Appearance = FOVSettingsTab:CreateSection({
    Name = "Appearance"
})
 
--// Functions - Sections
 
local FunctionsSection = FunctionsTab:CreateSection({
    Name = "Functions"
})
 
--// Settings / Values
 
Values:AddToggle({
    Name = "Enabled",
    Value = Settings.Enabled,
    Callback = function(New, Old)
        Settings.Enabled = New
    end
}).Default = Settings.Enabled
 
Values:AddToggle({
    Name = "Toggle",
    Value = Settings.Toggle,
    Callback = function(New, Old)
        Settings.Toggle = New
    end
}).Default = Settings.Toggle
 
Settings.LockPart = Parts[1]; Values:AddDropdown({
    Name = "Lock Part",
    Value = Parts[1],
    Callback = function(New, Old)
        Settings.LockPart = New
    end,
    List = Parts,
    Nothing = "Head"
}).Default = Parts[1]
 
Values:AddTextbox({ -- Using a Textbox instead of a Keybind because the UI Library doesn't support Mouse inputs like Left Click / Right Click...
    Name = "Hotkey",
    Value = Settings.TriggerKey,
    Callback = function(New, Old)
        Settings.TriggerKey = New
    end
}).Default = Settings.TriggerKey
 
--[[
Values:AddKeybind({
    Name = "Hotkey",
    Value = Settings.TriggerKey,
    Callback = function(New, Old)
        Settings.TriggerKey = stringmatch(tostring(New), "Enum%.[UserInputType]*[KeyCode]*%.(.+)")
    end,
}).Default = Settings.TriggerKey
]]
 
Values:AddSlider({
    Name = "Sensitivity",
    Value = Settings.Sensitivity,
    Callback = function(New, Old)
        Settings.Sensitivity = New
    end,
    Min = 0,
    Max = 1,
    Decimals = 2
}).Default = Settings.Sensitivity
 
--// Settings / Checks
 
Checks:AddToggle({
    Name = "Team Check",
    Value = Settings.TeamCheck,
    Callback = function(New, Old)
        Settings.TeamCheck = New
    end
}).Default = Settings.TeamCheck
 
Checks:AddToggle({
    Name = "Wall Check",
    Value = Settings.WallCheck,
    Callback = function(New, Old)
        Settings.WallCheck = New
    end
}).Default = Settings.WallCheck
 
Checks:AddToggle({
    Name = "Alive Check",
    Value = Settings.AliveCheck,
    Callback = function(New, Old)
        Settings.AliveCheck = New
    end
}).Default = Settings.AliveCheck
 
--// Settings / ThirdPerson
 
ThirdPerson:AddToggle({
    Name = "Enable Third Person",
    Value = Settings.ThirdPerson,
    Callback = function(New, Old)
        Settings.ThirdPerson = New
    end
}).Default = Settings.ThirdPerson
 
ThirdPerson:AddSlider({
    Name = "Sensitivity",
    Value = Settings.ThirdPersonSensitivity,
    Callback = function(New, Old)
        Settings.ThirdPersonSensitivity = New
    end,
    Min = 0.1,
    Max = 5,
    Decimals = 1
}).Default = Settings.ThirdPersonSensitivity
 
--// FOV Settings / Values
 
FOV_Values:AddToggle({
    Name = "Enabled",
    Value = FOVSettings.Enabled,
    Callback = function(New, Old)
        FOVSettings.Enabled = New
    end
}).Default = FOVSettings.Enabled
 
FOV_Values:AddToggle({
    Name = "Visible",
    Value = FOVSettings.Visible,
    Callback = function(New, Old)
        FOVSettings.Visible = New
    end
}).Default = FOVSettings.Visible
 
FOV_Values:AddSlider({
    Name = "Amount",
    Value = FOVSettings.Amount,
    Callback = function(New, Old)
        FOVSettings.Amount = New
    end,
    Min = 10,
    Max = 300
}).Default = FOVSettings.Amount
 
--// FOV Settings / Appearance
 
FOV_Appearance:AddToggle({
    Name = "Filled",
    Value = FOVSettings.Filled,
    Callback = function(New, Old)
        FOVSettings.Filled = New
    end
}).Default = FOVSettings.Filled
 
FOV_Appearance:AddSlider({
    Name = "Transparency",
    Value = FOVSettings.Transparency,
    Callback = function(New, Old)
        FOVSettings.Transparency = New
    end,
    Min = 0,
    Max = 1,
    Decimal = 1
}).Default = FOVSettings.Transparency
 
FOV_Appearance:AddSlider({
    Name = "Sides",
    Value = FOVSettings.Sides,
    Callback = function(New, Old)
        FOVSettings.Sides = New
    end,
    Min = 3,
    Max = 60
}).Default = FOVSettings.Sides
 
FOV_Appearance:AddSlider({
    Name = "Thickness",
    Value = FOVSettings.Thickness,
    Callback = function(New, Old)
        FOVSettings.Thickness = New
    end,
    Min = 1,
    Max = 50
}).Default = FOVSettings.Thickness
 
FOV_Appearance:AddColorpicker({
    Name = "Color",
    Value = FOVSettings.Color,
    Callback = function(New, Old)
        FOVSettings.Color = New
    end
}).Default = FOVSettings.Color
 
FOV_Appearance:AddColorpicker({
    Name = "Locked Color",
    Value = FOVSettings.LockedColor,
    Callback = function(New, Old)
        FOVSettings.LockedColor = New
    end
}).Default = FOVSettings.LockedColor
 
--// Functions / Functions
 
FunctionsSection:AddButton({
    Name = "Reset Settings",
    Callback = function()
        Functions.ResetSettings()
        Library.ResetAll()
    end
})
 
FunctionsSection:AddButton({
    Name = "Restart",
    Callback = Functions.Restart
})
 
FunctionsSection:AddButton({
    Name = "Exit",
    Callback = function()
        Functions:Exit()
        Library.Unload()
    end
})
 
FunctionsSection:AddButton({
    Name = "Copy Script Page",
    Callback = function()
        setclipboard("https://github.com/Exunys/Aimbot-V2")
    end
})
Tags:     
