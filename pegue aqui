-- Aimbot e ESP feito por Ryan
-- Integra ESP Settings na UI do Aimbot V2 (Pepsi UI) quando possível

-- Services
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Options (shared between UI and ESP draw)
local options = {
    -- ESP
    box = true,
    skeleton = true,
    rgb = true,
    name = true,
    distance = true,
    fixedColor = Color3.fromRGB(255, 0, 0),
    font = "UI",
    offsetX = 0,
    offsetY = 0,

    -- Aimbot local fallback defaults (if remote Aimbot failed)
    aimbotEnabled = false,
    toggle = false,
    sensitivity = 0.5,
    targetPart = "Head",
    teamCheck = true,
}

local availableFonts = { UI = 0, System = 1, Plex = 2, Monospace = 3, Cartoon = 4 }
local partsList = { "Head", "HumanoidRootPart", "UpperTorso", "LowerTorso", "Torso" }

-- Utility RGB function
local function getRGBColor()
    local t = tick() * 2
    return Color3.fromHSV(t % 1, 1, 1)
end

-- Drawing/ESP implementation
local successDrawing, DrawingAPI = pcall(function() return Drawing end)
if not successDrawing then
    warn("Drawing API não disponível neste executor. ESP não funcionará.")
end

local ESP_TABLE = {}

local function makeBox()
    if not Drawing then return end
    local b = Drawing.new("Square")
    b.Thickness = 1
    b.Filled = false
    b.Visible = false
    b.Transparency = 1
    return b
end

local function makeLine()
    if not Drawing then return end
    local l = Drawing.new("Line")
    l.Thickness = 1
    l.Visible = false
    l.Transparency = 1
    return l
end

local function makeText()
    if not Drawing then return end
    local t = Drawing.new("Text")
    t.Size = 14
    t.Color = Color3.fromRGB(255,255,255)
    t.Center = true
    t.Outline = true
    t.Visible = false
    t.Font = availableFonts[options.font] or 0
    return t
end

local function cleanupESP(player)
    local d = ESP_TABLE[player]
    if d then
        if d.box and d.box.Remove then pcall(function() d.box:Remove() end) end
        if d.name and d.name.Remove then pcall(function() d.name:Remove() end) end
        if d.dist and d.dist.Remove then pcall(function() d.dist:Remove() end) end
        if d.lines then
            for _,ln in ipairs(d.lines) do if ln and ln.Remove then pcall(function() ln:Remove() end) end end
        end
        ESP_TABLE[player] = nil
    end
end

Players.PlayerRemoving:Connect(function(plr) cleanupESP(plr) end)

if Drawing then
    RunService.RenderStepped:Connect(function()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                if not ESP_TABLE[player] then
                    ESP_TABLE[player] = {
                        box = makeBox(),
                        name = makeText(),
                        dist = makeText(),
                        lines = {},
                    }
                    for i=1, 15 do table.insert(ESP_TABLE[player].lines, makeLine()) end
                end
                local data = ESP_TABLE[player]
                local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if not hrp or not humanoid then
                    cleanupESP(player)
                    continue
                end
                local pos3, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                local color = options.rgb and getRGBColor() or options.fixedColor

                -- Box
                if options.box and onScreen and pos3.Z > 0.1 then
                    local height = math.clamp((humanoid.HipHeight or 2) * (200/pos3.Z), 10, 1000)
                    local width = math.clamp(height / 2, 6, 600)
                    data.box.Position = Vector2.new(pos3.X - width/2 + options.offsetX, pos3.Y - height/2 + options.offsetY)
                    data.box.Size = Vector2.new(width, height)
                    data.box.Color = color
                    data.box.Visible = true
                else
                    if data.box then data.box.Visible = false end
                end

                -- Skeleton
                for _,ln in ipairs(data.lines) do ln.Visible = false end
                if options.skeleton then
                    local function drawBone(a,b,index)
                        local p1 = player.Character:FindFirstChild(a)
                        local p2 = player.Character:FindFirstChild(b)
                        if p1 and p2 then
                            local p1v, on1 = Camera:WorldToViewportPoint(p1.Position)
                            local p2v, on2 = Camera:WorldToViewportPoint(p2.Position)
                            if on1 and on2 and p1v.Z > 0 and p2v.Z > 0 then
                                local ln = data.lines[index]
                                ln.From = Vector2.new(p1v.X + options.offsetX, p1v.Y + options.offsetY)
                                ln.To = Vector2.new(p2v.X + options.offsetX, p2v.Y + options.offsetY)
                                ln.Color = color
                                ln.Visible = true
                            end
                        end
                    end
                    drawBone("Head","UpperTorso",1)
                    drawBone("UpperTorso","LowerTorso",2)
                    drawBone("LowerTorso","LeftUpperLeg",3)
                    drawBone("LeftUpperLeg","LeftLowerLeg",4)
                    drawBone("LeftLowerLeg","LeftFoot",5)
                    drawBone("LowerTorso","RightUpperLeg",6)
                    drawBone("RightUpperLeg","RightLowerLeg",7)
                    drawBone("RightLowerLeg","RightFoot",8)
                    drawBone("UpperTorso","LeftUpperArm",9)
                    drawBone("LeftUpperArm","LeftLowerArm",10)
                    drawBone("LeftLowerArm","LeftHand",11)
                    drawBone("UpperTorso","RightUpperArm",12)
                    drawBone("RightUpperArm","RightLowerArm",13)
                    drawBone("RightLowerArm","RightHand",14)
                end

                -- Name & Distance
                if data.name then data.name.Font = availableFonts[options.font] or 0 end
                if data.dist then data.dist.Font = data.name.Font end

                if options.name and onScreen then
                    data.name.Text = player.Name
                    local yOff = (data.box.Size and data.box.Size.Y/2 or 40) + 12
                    data.name.Position = Vector2.new(pos3.X + options.offsetX, pos3.Y - yOff + options.offsetY)
                    data.name.Color = color
                    data.name.Visible = true
                else
                    if data.name then data.name.Visible = false end
                end

                if options.distance and onScreen then
                    local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                    local dist = root and (root.Position - hrp.Position).Magnitude or 0
                    data.dist.Text = string.format("%.1f m", dist)
                    local yOff = (data.box.Size and data.box.Size.Y/2 or 40) + 12
                    data.dist.Position = Vector2.new(pos3.X + options.offsetX, pos3.Y + yOff + options.offsetY)
                    data.dist.Color = Color3.fromRGB(220,220,220)
                    data.dist.Visible = true
                else
                    if data.dist then data.dist.Visible = false end
                end
            else
                if ESP_TABLE[player] then cleanupESP(player) end
            end
        end
    end)
end

-- Safe load Aimbot V2 (remote)
local function safeLoadAimbotV2()
    local ok, err = pcall(function()
        if getgenv and getgenv().Aimbot then return end
        local raw = game:HttpGet("https://raw.githubusercontent.com/Exunys/Aimbot-V2/main/Resources/Scripts/Raw%20Main.lua")
        if raw and raw ~= "" then
            local f = loadstring(raw)
            if f then f() end
        end
    end)
    if not ok then warn("Falha ao carregar Aimbot V2:", err) end
end

safeLoadAimbotV2()

-- Unified UI or fallback
local ok, window = pcall(tryCreateUnifiedWindow)
if not ok or window == nil then
    warn("Não foi possível criar UI unificada com Pepsi Library. Criando menu local fallback.")
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "Aimbot_ESP_Fallback"
    screenGui.Parent = game.CoreGui

    local frame = Instance.new("Frame", screenGui)
    frame.Position = UDim2.new(0,20,0,80)
    frame.Size = UDim2.new(0,520,0,420)
    frame.BackgroundColor3 = Color3.fromRGB(12,18,30)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1,0,0,36)
    title.Position = UDim2.new(0,0,0,0)
    title.BackgroundColor3 = Color3.fromRGB(22,30,44)
    title.TextColor3 = Color3.fromRGB(230,240,255)
    title.Text = "Aimbot e ESP feito por Ryan (Fallback)"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16

    -- Columns
    local aimbotCol = Instance.new("Frame", frame)
    aimbotCol.Size = UDim2.new(0.5, -12, 1, -48)
    aimbotCol.Position = UDim2.new(0,6,0,48)
    aimbotCol.BackgroundTransparency = 1

    local espCol = Instance.new("Frame", frame)
    espCol.Size = UDim2.new(0.5, -12, 1, -48)
    espCol.Position = UDim2.new(0.5,6,0,48)
    espCol.BackgroundTransparency = 1

    local function addToggle(parent, text, key)
        local btn = Instance.new("TextButton", parent)
        btn.Size = UDim2.new(1,0,0,28)
        btn.BackgroundColor3 = Color3.fromRGB(28,36,52)
        btn.TextColor3 = Color3.fromRGB(230,240,255)
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.Text = text .. ": " .. (options[key] and "ON" or "OFF")
        btn.MouseButton1Click:Connect(function()
            options[key] = not options[key]
            btn.Text = text .. ": " .. (options[key] and "ON" or "OFF")
        end)
    end

    local function addColorButton(parent, text, key)
        local btn = Instance.new("TextButton", parent)
        btn.Size = UDim2.new(1,0,0,28)
        btn.BackgroundColor3 = options[key]
        btn.Text = text
        btn.Font = Enum.Font.Gotham
        btn.TextColor3 = Color3.fromRGB(240,240,240)
        btn.MouseButton1Click:Connect(function()
            options[key] = Color3.fromRGB(math.random(0,255), math.random(0,255), math.random(0,255))
            btn.BackgroundColor3 = options[key]
        end)
    end

    -- Populate fallback
    addToggle(aimbotCol, "Aimbot Enabled", "aimbotEnabled")
    addToggle(aimbotCol, "Team Check", "teamCheck")

    addToggle(espCol, "Box", "box")
    addToggle(espCol, "Skeleton", "skeleton")
    addToggle(espCol, "RGB", "rgb")
    addToggle(espCol, "Show Name", "name")
    addToggle(espCol, "Show Distance", "distance")
    addColorButton(espCol, "Cor fixa", "fixedColor")
end

-- Local fallback aimbot logic
local function getClosestPlayerLocal()
    local closest, bestDist = nil, 150
    for _,pl in ipairs(Players:GetPlayers()) do
        if pl ~= LocalPlayer and pl.Character and pl.Character:FindFirstChild(options.targetPart) then
            if options.teamCheck and pl.Team == LocalPlayer.Team then continue end
            local ppos, onScreen = Camera:WorldToViewportPoint(pl.Character[options.targetPart].Position)
            if onScreen then
                local diff = (Vector2.new(ppos.X, ppos.Y) - UserInputService:GetMouseLocation()).Magnitude
                if diff < bestDist then
                    bestDist = diff
                    closest = pl
                end
            end
        end
    end
    return closest
end

RunService.RenderStepped:Connect(function()
    if not options.aimbotEnabled then return end
    local target = getClosestPlayerLocal()
    if target and target.Character and target.Character:FindFirstChild(options.targetPart) then
        local tp = Camera:WorldToViewportPoint(target.Character[options.targetPart].Position)
        local ok, _ = pcall(function() return mousemoverel end)
        if ok and mousemoverel then
            local deltaX = (tp.X - UserInputService:GetMouseLocation().X) * options.sensitivity
            local deltaY = (tp.Y - UserInputService:GetMouseLocation().Y) * options.sensitivity
            pcall(function() mousemoverel(deltaX, deltaY) end)
        end
    end
end)

print("Aimbot e ESP feito por Ryan inicializado.")
